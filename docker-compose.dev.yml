services:
  postgres:
    image: postgres:16-alpine
    container_name: trip-planner-postgres-dev
    environment:
      - POSTGRES_DB=trip_planner_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d trip_planner_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - trip-planner-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: trip-planner-backend-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/trip_planner_dev?schema=public
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/prisma:/app/prisma
      - ./backend/.env:/app/.env
    command: npm run dev
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - trip-planner-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: trip-planner-frontend-dev
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tsconfig.app.json:/app/tsconfig.app.json
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - trip-planner-network

networks:
  trip-planner-network:
    driver: bridge

volumes:
  postgres_dev_data: