services:
  postgres:
    image: postgres:16-alpine
    container_name: trip-planner-postgres
    environment:
      - POSTGRES_DB=trip_planner
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d trip_planner"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - trip-planner-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trip-planner-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/trip_planner?schema=public
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - trip-planner-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: trip-planner-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - trip-planner-network

networks:
  trip-planner-network:
    driver: bridge

volumes:
  postgres_data: